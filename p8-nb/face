//face
//E.setFlags({pretokenise:1});
//console.log("face start");

//clock
var clockFace = {
  offms: 5000,
  init: function(){
    var g=w.gfx;
    var d=(Date()).toString().split(' ');
    this.v=w.battVoltage(1);
    g.setColor(7);
    g.fillRect(0,0,158,50); //date
    g.fillRect(162,0,239,50);//batt
    g.fillRect(0,200,78,239); //bottom1 memmory
//    g.fillRect(82,200,158,239); //bottom 2 alarms
    g.fillRect(162,200,239,239); //bottom3 euc
    g.setColor(0);
    g.setFont("Vector",28);
    g.drawString(mem(), 0 ,205); //memmory
//    g.drawString("AL", 100 ,205); //Alarms
    g.drawString("EUC", 163 ,205); //euc
    g.setFont("Vector",35);
    g.drawString(d[2]+" "+d[0], (79-(g.stringWidth(d[2]+" "+d[0]))/2) ,5); //date
    g.setFont("7x11Numeric7Seg",4);
    g.drawString(this.v,240-(g.stringWidth(this.v)),3); //batt
    g.flip();
     //Alarms
	if (alrm.buzz!=-1) g.setColor(14);
    else if (alrm[1].on===1||alrm[2].on===1||alrm[3].on===1) g.setColor(9);
    else  g.setColor(7);
	g.fillRect(82,200,158,239); //bottom 2 alarms
	g.setColor(0);
	g.setFont("Vector",28);
	g.drawString("AL", 100 ,205); //Alarms
	g.flip();
    if(!g.isOn) g.on();
    this.run=true;
  },
  show : function(){
  if (!this.run) return;
  var g=w.gfx;
  var d=(Date()).toString().split(' ');
  var t=(d[4]).toString().split(':');
  var s=(t[2]).toString().split('');
  //hours
  g.setColor(0);
  g.fillRect(0,60,100,155);
  g.setColor(15);
  g.setFont("Vector",65);
  g.drawString(t[0],0,75); //hours
  g.setFont("Vector",45);
  g.drawString(":",96,85);
  g.flip();
  //minutes
  g.drawString(":",96,85);
  g.setFont("Vector",65);
  g.setColor(0);g.fillRect(110,60,210,155);
  g.setColor(11);//
  g.drawString(t[1],118,75); //minutes
  g.flip();
  //seconds
  g.setColor(0);g.fillRect(211,60,240,155);
  g.setColor(7);//
  g.setFont("Vector",25);
  g.drawString(s[0],222,78); //seconds
  g.drawString(s[1],222,116); //seconds
  g.flip(); 
  //memmory  
  g.setColor(7);
  g.fillRect(0,200,78,239); //bottom1 memmory
  g.setColor(0);
  g.setFont("Vector",28);
  g.drawString(mem(), 0 ,205); //memmory
  g.flip();
 
  //batt
  if (digitalRead(w.pin.CHARGING)==0)
    g.setColor(13);
  else if (this.v<=20)
    g.setColor(12);
  else 
    g.setColor(7);
  g.fillRect(162,0,239,50);//batt
  g.setColor(0);
  g.setFont("7x11Numeric7Seg",4);
  g.drawString(this.v,240-(g.stringWidth(this.v)),3); //batt
  g.flip();
  //euc
  if (euc.val.lock==1 && euc.val.conn=="READY") g.setColor(13);
  else if (euc.val.lock==1 ) g.setColor(10);
  else if (euc.val.conn=="READY")g.setColor(11);
  else g.setColor(7);
  g.fillRect(162,200,239,239);
  g.setColor(0);
  g.setFont("Vector",28);
  g.drawString("EUC", 163 ,205); 
  g.flip();

    
  //loop
    this.tid=setTimeout(function(t){
      t.tid=-1;
      t.show();
    },1000-Date().getMilliseconds(),this);
  },
  tid:-1,
  run:false,
  clear : function(){
    var g=w.gfx;
    g.clear();
    this.exit();
    return true;
  },
  exit: function(){
    this.run=false;
    if (this.tid>=0) clearTimeout(this.tid);
    this.tid=-1;
    return true;
  },
  off: function(){
    var g=w.gfx;
    g.off();
    this.clear();
  }
};
//Euc main face
var eucMain = {
  offms: 15000, //15 sec timeout
  init: function(){
    var g=w.gfx;
    g.setColor(7);
    g.fillRect(0,0,135,50); //temp
    g.fillRect(139,0,239,50); //batt      
    g.fillRect(0,158,239,193); //mileage
    g.setColor(0);
    g.setFont("7x11Numeric7Seg",4);
    g.drawString(euc.val.temp, 10,3); //temp
    g.drawString(euc.val.batt,240-(g.stringWidth(euc.val.batt)+10),3); //fixed bat
    g.setFontVector(20); //mileage
    g.drawString("TRIP",1,164); 
    g.drawString("TOTAL",80,164); 
    g.drawString("LEFT",176,164); 
    g.flip();
    //mileage
    g.fillRect(0,194,239,239);
    if (euc.val.conn=="READY") g.setColor(11);
	else g.setColor(7);    
    g.setFont("7x11Numeric7Seg",3);
    g.drawString(euc.val.tripNow,0,205); 
    g.drawString(euc.val.tripTotal,(240-(g.stringWidth(euc.val.tripTotal)))/2,205); 
    g.drawString(euc.val.tripLeft,240-(g.stringWidth(euc.val.tripLeft)+1),205); 
    g.flip();

    euc.tmp.speed[0]="-1";
    euc.tmp.speed[1]="-1";
    euc.tmp.amp="-1";
    euc.tmp.temp="-1";
    euc.tmp.batt="-1";
    euc.tmp.tripNow="-1";
    if(!g.isOn) g.on();
    this.conn="OFF";
    this.lock=2;
    this.run=true;
  },
  show : function(o){
  if (!this.run) return;
  var g=w.gfx;
  if (euc.val.conn=="READY") {
    //speed 1
    if (euc.val.speed[0]!=euc.tmp.speed[0]){
      euc.tmp.speed[0]=euc.val.speed[0];
        if (euc.val.speedCol!=0) {
		  g.setColor(euc.val.speedCol);
          g.fillRect(0,54,135,154);
          g.setColor(0);
        }else { 
		  g.setColor(0);
          g.fillRect(0,54,135,154);
          g.setColor(15);
        }
        if (euc.val.speed[0]==0) {   
	      g.setFontVector(18);
          g.drawString("AV.SPEED",12,60);
	      g.setFont("7x11Numeric7Seg",5);
	      g.drawString(euc.val.aver,(139-(g.stringWidth(euc.val.aver)))/2,90); 
          g.flip();
        }else{
          g.setFontVector(90);
          g.drawString(euc.val.speed[0],(135-(g.stringWidth(euc.val.speed[0])))/2,55); 
          euc.tmp.speed[0]=euc.val.speed[0];
          g.flip();
        }
    }
      //Amp
    if ((euc.val.amp|0)!=euc.tmp.amp) {
        euc.tmp.amp=(euc.val.amp|0);
        if  (euc.val.ampCol!=0 ) {
		  g.setColor(euc.val.ampCol);
          g.fillRect(139,54,239,154); 
          g.setColor(0);
        }else { 
		  g.setColor(0);
          g.fillRect(139,54,239,154); 
          g.setColor(15);
        }
        
        if (((euc.val.amp|0)==0 && euc.val.speed[0]==0) ||  euc.val.lock==1) {  
	      g.setFontVector(18);
	      g.drawString("RunTIME",141,60);
	      g.setFont("7x11Numeric7Seg",5);
  	      g.drawString(euc.val.time,192-(g.stringWidth(euc.val.time)/2),90); 
          g.flip();
        }else{
          g.setFont("7x11Numeric7Seg",6);
          g.drawString(euc.val.amp|0,(142+(100-g.stringWidth(euc.val.amp|0))/2),73); 
          g.flip();
        }    
    }
    //Temp
    if (euc.val.temp!=euc.tmp.temp) {
      euc.tmp.temp=euc.val.temp;
	  g.setColor(euc.val.tempCol);
      g.fillRect(0,0,135,50);       
      g.setColor(0);
      g.setFont("7x11Numeric7Seg",4);
      g.drawString(euc.val.temp, 10,3); //temp
      g.flip();
    }
    //Battery
    if (euc.val.batt!=euc.tmp.batt) {
   	  euc.tmp.batt=euc.val.batt;
	  g.setColor(euc.val.battCol);
      g.fillRect(139,0,239,50);
      g.setColor(0);
      g.setFont("7x11Numeric7Seg",4);
      g.drawString(euc.val.batt,240-(g.stringWidth(euc.val.batt)+10),3); //fixed bat
      g.flip();
    }
    //Mileage
	if (euc.val.tripNow!=euc.tmp.tripNow) {
	  euc.tmp.tripNow=euc.val.tripNow;
	  g.setColor(0);
	  g.fillRect(0,194,239,239);
      g.setColor(11);
	  g.setFont("7x11Numeric7Seg",3);
   	  g.drawString(euc.val.tripNow,0,205); 
	  g.drawString(euc.val.tripTotal,(240-(g.stringWidth(euc.val.tripTotal)))/2,205); 
	  g.drawString(euc.val.tripLeft,240-(g.stringWidth(euc.val.tripLeft)+1),205); 
	  g.flip();
    }     
  // diconnected  
  } else if (euc.val.conn=="OFF")  {
    if (euc.val.lock!=this.lock){
    this.lock=euc.val.lock;
    g.setColor(7);
    g.fillRect(0,54,135,154);
    g.setColor(0);
    g.setFontVector(18);
    g.drawString("AV.SPEED",12,60);
    g.setFont("7x11Numeric7Seg",5);
    g.drawString(euc.val.aver,(139-(g.stringWidth(euc.val.aver)))/2,90); 
    g.flip();
    if (euc.val.lock==1) g.setColor(10);
    else  g.setColor(7);
    g.fillRect(139,54,239,154); 
    g.setColor(0); 
	g.setFontVector(18);
	g.drawString("RunTIME",141,60);
	g.setFont("7x11Numeric7Seg",5);
  	g.drawString(euc.val.time,192-(g.stringWidth(euc.val.time)/2),90); 
    g.flip();
	if (euc.val.conn=="OFF" && euc.val.lock==1){
    this.exit();console.log("faceEUCexited");
    }
    }
  // rest
  } else  {
    if (euc.val.conn!=this.conn) {
    this.conn=euc.val.conn;
    g.setColor(7);
	g.fillRect(0,54,135,154);
	g.setColor(0);
	g.setFontVector(18);
    g.drawString("AV.SPEED",12,60);
	g.setFont("7x11Numeric7Seg",5);
	g.drawString(euc.val.aver,(139-(g.stringWidth(euc.val.aver)))/2,90); 
    g.flip();
    g.fillRect(139,54,239,154); 
    g.setColor(15);     
    g.setFont("Vector",30);
    g.drawString(euc.val.conn,(142+(100-g.stringWidth(euc.val.conn))/2),85);
    g.flip();
    g.setColor(7);
    g.fillRect(0,0,135,50);
    g.fillRect(139,0,239,50);
    g.setColor(0);
    g.setFont("7x11Numeric7Seg",4);
    g.drawString(euc.val.temp, 10,3); //temp
    g.drawString(euc.val.batt,240-(g.stringWidth(euc.val.batt)+10),3);    
    g.flip();
    }
  }
  // refresh 
  this.tid=setTimeout(function(t){
      t.tid=-1;
      t.show();
    },100,this);
  },
  tid:-1,
  run:false,
  clear : function(){
    var g=w.gfx;
    g.clear();
    this.exit();
    return true;
  },
  exit: function(){
    this.run=false;
    if (this.tid>=0) clearTimeout(this.tid);
    this.tid=-1;
    return true;
  },
  off: function(){
    var g=w.gfx;
    g.off();
    this.clear();
  } 
};


//euc settings
var eucSet = {
  offms: 5000,
  init: function(){
    var g=w.gfx;
    g.setColor(7);
    g.fillRect(0,0,115,75); //left up
    g.fillRect(0,80,115,155); //left mid
    g.fillRect(0,160,115,239); //left dn
    g.fillRect(120,0,239,239); //right-riding mode      
    g.setColor(0);
    g.setFont("Vector",22);
	g.drawString("RING",58-(g.stringWidth("RING")/2),5); 
	g.drawString("LIGHTS",58-(g.stringWidth("LIGHTS")/2),30); 
	g.drawString("TRIP",58-(g.stringWidth("TRIP")/2),180); 
	g.drawString("RESET",58-(g.stringWidth("RESET")/2),205); 
	//ridemode
    g.drawString("EUC",180-(g.stringWidth("EUC")/2),150); 
	g.drawString("is",180-(g.stringWidth("if")/2),170);
 	g.drawString("OFF",180-(g.stringWidth("OFF")/2),190);

	//g.setFont("Vector",80);
    //g.drawString(euc.val.ridemode,180-(g.stringWidth(euc.val.ridemode)/2),80); //fixed bat
	g.flip();
    this.rdmd=-1;
    this.alck=-1;
	this.run=true;
  },
  show : function(){
    if (!this.run) return; 
    var g=w.gfx;
    if (euc.val.conn=="READY") {  
	if (euc.val.ridemode != this.rdmd) {
	  this.rdmd=euc.val.ridemode;	
      g.setColor(11);
      g.fillRect(120,0,239,239); //right-riding mode      
      g.setColor(0);
      g.setFont("Vector",88);
      g.drawString(euc.val.ridemode,180-(g.stringWidth(euc.val.ridemode)/2),70);  
      g.setFont("Vector",35);
      if (9>euc.val.ridemode) {
      g.drawString(euc.val.ridemode+1,180-(g.stringWidth(euc.val.ridemode+1)/2),35);  
      }
      if (euc.val.ridemode>0) {
      g.drawString(euc.val.ridemode-1,180-(g.stringWidth(euc.val.ridemode-1)/2),165); 
      }
      g.setFont("Vector",20);
      if (8>euc.val.ridemode) {
      g.drawString(euc.val.ridemode+2,180-(g.stringWidth(euc.val.ridemode+2)/2),10); 
      }
      if (euc.val.ridemode>1) {
      g.drawString(euc.val.ridemode-2,180-(g.stringWidth(euc.val.ridemode-2)/2),208); 
      }
      g.flip();
    }
    if (euc.val.alock != this.alck) {
	  this.alck=euc.val.alock;
      if (this.alck==1) g.setColor(14);
      else g.setColor(7);
      g.fillRect(0,80,115,155); //left mid
      g.setColor(0);
 	  g.setFont("Vector",22);
      g.drawString("A-lock",58-(g.stringWidth("A-lock")/2),100); 
	  g.flip();
    }
    }
    //loop
    this.tid=setTimeout(function(t,o){
      t.tid=-1;
      t.show();
    },100,this);
  },
  tid:-1,
  run:false,
  clear : function(){
    var g=w.gfx;
    g.clear();
    this.exit();
    return true;
  },
  exit: function(){
    this.run=false;
    if (this.tid>=0) clearTimeout(this.tid);
    this.tid=-1;
    return true;
  },
  off: function(){
    var g=w.gfx;
    g.off();
    this.clear();
  }
};


//home
var home = {
  offms: 5000,
  show : function(o){
    if (!this.run) return;
 
  //loop
    this.tid=setTimeout(function(t,o){
      t.tid=-1;
      t.show(o);
    },1000,this,o);
  },
  tid:-1,
  run:false,
  init: function(){
   
  },
  clear : function(o){
    var g=w.gfx;
    g.clear();
    this.exit(o);
    return true;
  },
  exit: function(o){
    this.run=false;
    if (this.tid>=0) clearTimeout(this.tid);
    this.tid=-1;
//    g.clear();
 //   g.flip();
    return true;
  },
  off: function(o){
    var g=w.gfx;
    g.off();
    this.clear(o);
  }
};


var alrm ={
  buzz:-1,
  1:{hour:8,min:0,rep:0,snz:0,on:0,set:0,tmr:-1},
  2:{hour:13,min:0,rep:0,snz:0,on:0,set:0,tmr:-1},
  3:{hour:21,min:30,rep:0,snz:0,on:0,set:0,tmr:-1},
  set: function(o){
    if ( this[o].tmr!=-1){ clearTimeout(this[o].tmr); this[o].tmr=-1;}
    var date = new Date(Date().getFullYear(),Date().getMonth(),Date().getDate(),this[o].hour,this[o].min ); 
    if (date < Date()) {
      date.setDate(date.getDate() + 1);
    }
    var diff=date-Date();
//    console.log("alarm in:",diff);
    
    this[o].tmr=setTimeout((i)=>{
      this.vibr(i);
      this[i].tmr=-1;
      if (this[i].rep===1)this.set(i); else this[i].on=0; 
    },diff-10000,o); 	
  },
  vibr: function(o){
    if (this.buzz!=-1) return;
	var a=[200,150,100];
	this.buzz=setInterval((o)=>{
      a.push(50,100);
//      console.log("alarm");
      digitalPulse(w.pin.MOTOR,0,a); 
    },10000);
    
  },
  snz: function(o){  
    if (this.buzz!=-1) {
    
    }
  },
  stop: function(o){  
    if (this.buzz!=-1) {
      clearInterval(this.buzz);
      this.buzz=-1;
    }
  }
};

//Alarm
var alarm = {
  offms: 5000,
  pad:function pad(n) {
    return (n < 10) ? ("0" + n) : n;
  }, 
  init: function(){
    var g=w.gfx;
    var d=(Date()).toString().split(' ');
    var t=(d[4]).toString().split(':');
    g.setColor(7);
      g.fillRect(0,39,239,103); //1
      g.fillRect(0,107,239,171); //2
      g.fillRect(0,175,239,239); //3
    g.flip();
    g.setColor(3);
    g.fillRect(0,0,239,35); 
    g.setColor(0);
    g.setFont("Vector",30);
	g.drawString("Alarms",0,2); 
  	g.drawString(t[0]+":"+t[1],239-(g.stringWidth(t[0]+":"+t[1])),2); 
    g.flip();
	this.al1=-1;
	this.al2=-1;
	this.al3=-1;
	this.run=true; 
  },
  show : function(){
    if (!this.run) return;
    var g=w.gfx;
    g.setFont("Vector",55);  
    if (alrm[1].on!=this.al1) {
      this.al1=alrm[1].on;
      if (this.al1==1) g.setColor(9);
      else g.setColor(7);  
      g.fillRect(0,39,239,103); //1
      g.setColor(0);
      g.drawString(this.pad(alrm[1].hour)+":"+this.pad(alrm[1].min),120-(g.stringWidth(this.pad(alrm[1].hour)+":"+this.pad(alrm[1].min)))/2,42); 
  	  g.flip();
    }
    if (alrm[2].on!=this.al2) {
      this.al2=alrm[2].on;
      if (this.al2==1) g.setColor(2);
      else g.setColor(3);  
      g.fillRect(0,107,239,171); //2
      g.setColor(0);
     g.drawString(this.pad(alrm[2].hour)+":"+this.pad(alrm[2].min),120-(g.stringWidth(this.pad(alrm[2].hour)+":"+this.pad(alrm[2].min)))/2,109); 
  	  g.flip();
    } 
    if (alrm[3].on!=this.al3) {
      this.al3=alrm[3].on;
      if (this.al3==1) g.setColor(9);
      else g.setColor(7);  
      g.fillRect(0,175,239,239); //3
      g.setColor(0);
      g.drawString(this.pad(alrm[3].hour)+":"+this.pad(alrm[3].min),120-(g.stringWidth(this.pad(alrm[3].hour)+":"+this.pad(alrm[3].min)))/2,178); 
  	  g.flip();
    }

  //loop
    this.tid=setTimeout(function(t){
      t.tid=-1;
      t.show();
    },100,this);
  },
  tid:-1,
  run:false,

  clear : function(){
    var g=w.gfx;
    g.clear();
    this.exit();
    return true;
  },
  exit: function(){
    this.run=false;
    if (this.tid>=0) clearTimeout(this.tid);
    this.tid=-1;
//    g.clear();
 //   g.flip();
    return true;
  },
  off: function(){
    var g=w.gfx;
    g.off();
    this.clear();
  }
};


var aSet = {
  offms: 5000,
  al:{
  1:{hour:0,min:0,rep:0,snz:0,on:0,set:0},
  2:{hour:0,min:0,rep:0,snz:0,on:0,set:0},
  3:{hour:0,min:0,rep:0,snz:0,on:0,set:0}
  },
  pad:function pad(n) {
    return (n < 10) ? ("0" + n) : n;
  }, 
  init: function(o){
    console.log("ll",o);
    var g=w.gfx;
    var d=(Date()).toString().split(' ');
    var t=(d[4]).toString().split(':');
    g.setColor(3);
    g.fillRect(0,0,239,35); 
//    g.fillRect(0,185,239,239); //rest
    g.setColor(0);
    g.setFont("Vector",30);
	g.drawString("Alarms",0,2); 
  	g.drawString(t[0]+":"+t[1],239-(g.stringWidth(t[0]+":"+t[1])),2); 
    g.flip();
    g.setColor(7);
    //g.fillRect(0,39,118,180); //hour
    g.fillRect(122,39,239,180); //min
    //
    g.flip();
    this.al[o].hour=-1;
    this.al[o].min=-1;
    this.al[o].rep=-1;
    this.al[o].snz=-1;
    this.al.curr=o;
  	this.run=true;
  },
  show : function(o){
    if (!this.run) return;
    var g=w.gfx;
    if (alrm[o].hour!=this.al[o].hour) {
      this.al[o].hour=alrm[o].hour;
      g.setColor(3);
      g.fillRect(0,39,119,180); //hour
      g.setColor(0);
      g.setFont("Vector",80);  
      g.drawString(this.pad(this.al[o].hour),60-(g.stringWidth(this.pad(this.al[o].hour)))/2,60); 
  	  g.flip();
    }
    if (alrm[o].min!=this.al[o].min) {
      this.al[o].min=alrm[o].min;
      g.setColor(7);
      g.fillRect(121,39,239,180); //min
      g.setColor(0);
      g.setFont("Vector",80);  
      g.drawString(this.pad(this.al[o].min),180-(g.stringWidth(this.pad(this.al[o].min)))/2,60); 
  	  g.flip();
    }
    if (alrm[o].snz!=this.al[o].snz) {
      this.al[o].snz=alrm[o].snz;
     if (this.al[o].snz===1) g.setColor(2);
      else g.setColor(8); 
      g.fillRect(0,185,120,239); //snooze
      g.setColor(0);
      g.setFont("Vector",22);  
      g.drawString("SNOOZE",0,195); 
  	  g.flip();
    }
    if (alrm[o].rep!=this.al[o].rep) {
      this.al[o].rep=alrm[o].rep;
     if (this.al[o].rep===1) g.setColor(2);
      else g.setColor(8); 
      g.fillRect(121,185,239,239); //repeat
      g.setColor(0);
      g.setFont("Vector",22);  
      g.drawString("REPEAT",126,195); 
  	  g.flip();
    }

   
  //loop
    this.tid=setTimeout(function(t){
      t.tid=-1;
      t.show(o);
    },100,this);
  },
  tid:-1,
  run:false,

  clear : function(){
    var g=w.gfx;
    g.clear();
    this.exit();
    return true;
  },
  exit: function(){
    this.run=false;
    if (this.tid>=0) clearTimeout(this.tid);
    this.tid=-1;
//    g.clear();
 //   g.flip();
    return true;
  },
  off: function(){
    var g=w.gfx;
    g.off();
    this.clear();
  }
};

var faces = [
  clockFace,
  eucMain,
  eucSet,
  alarm,
  aSet
];

//eval(require('Storage').read('face'));
//  g.setColor(1); //
//  g.setColor(2);// Dgreen
//  g.setColor(3);// Dgrey
//  g.setColor(4);// Dred
//  g.setColor(5);// Dpurple
//  g.setColor(6);// Dorange
//  g.setColor(7); //grey
//  g.setColor(8);// Dark
//  g.setColor(9); //Dblue
//  g.setColor(10);// green
//  g.setColor(11);// blue
//  g.setColor(12);// red
//  g.setColor(13);// purple
//  g.setColor(14);// yellow
//  g.setColor(15);// white
//console.log("face end");
