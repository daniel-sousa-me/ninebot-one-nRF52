//main
face[0] = {
  offms: 3000,
  init: function(){
  var g=w.gfx;
  this.v=w.battVoltage(1);
  var d=(Date()).toString().split(' ');
  var t=(d[4]).toString().split(':');
  var s=(t[2]).toString().split('');
  //top
  g.setColor(1,col.lgray);
  g.fillRect(0,0,158,50); //date
  g.fillRect(162,0,239,50);//batt
  g.setColor(0,col.black);//
  g.flip();
  //bottom

  //bt status-date
  if (set.bt===0)	g.setColor(0,colo.bck1);
  else if (set.bt===1)  g.setColor(0,colo.bck3);
  else  g.setColor(0,colo.btnSt);
  g.fillRect(0,0,158,50); //date
  g.setColor(1,colo.btnTxt);
  g.setFont("Vector",35);
  g.drawString(d[2]+" "+d[0].toUpperCase(), (81-(g.stringWidth(d[2]+" "+d[0].toUpperCase()))/2) ,9); //date
  g.flip();
  //batt-charger state
  if (set.ondc==1) g.setColor(0,colo.btnSt);
  else if (this.v<=20) g.setColor(0,colo.btnAl);
  else g.setColor(0,col.lgray);
  g.fillRect(162,0,239,50);//batt
  g.setColor(1,colo.btnTxt);
  if (this.v<0) {g.setFont("Vector",22);g.drawString("EMPTY",242-(g.stringWidth("EMPTY")),15); } 
  else if (this.v<100) {g.setFont("Vector",35);g.drawString(this.v+"%",239-(g.stringWidth(this.v+"%")),8);} 
  else  {g.setFont("Vector",29);g.drawString("FULL",242-(g.stringWidth("FULL")),10); } 
  g.flip();
  
//push-(wip)    
  if (typeof set.push !== 'undefined') {
    g.setColor(1,col.lgray);//
	g.setFont("Vector",25);
	g.drawString(set.push,119-(g.stringWidth(set.push))/2,165); //info
	g.flip();
  }
  this.hour=-1;
  this.min=-1;
  this.sec=-1;
  this.batt=set.ondc;
  this.mem=-1;
  this.bt=set.bt;
  this.run=true;
  },
  show : function(){
  if (!this.run) return;
  var g=w.gfx;
  var d=(Date()).toString().split(' ');
  var t=(d[4]).toString().split(':');
  var s=(t[2]).toString().split('');
  //bt status on date
  if (set.bt != this.bt){
	this.bt=set.bt;
	if (this.bt==0)	g.setColor(0,colo.bck1);
    else if (this.bt==1)  g.setColor(0,colo.bck3);
    else  g.setColor(0,colo.btnSt);
	g.fillRect(0,0,158,50); //date
    g.setColor(1,colo.btnTxt);
    g.setFont("Vector",35);
    g.drawString(d[2]+" "+d[0].toUpperCase(), (81-(g.stringWidth(d[2]+" "+d[0].toUpperCase()))/2) ,9); //date
	g.flip();
  }
  //batt status
  if (this.batt!=set.ondc ){
    this.batt=set.ondc;
    this.v=w.battVoltage(1);
    if (this.batt==1)
      g.setColor(0,colo.btnSt);
    else if (this.v<=20)
      g.setColor(0,colo.btnAl);
    else 
      g.setColor(0,col.lgray);
    g.fillRect(162,0,239,50);//batt
    g.setColor(1,colo.btnTxt);
	if (this.v<0) {g.setFont("Vector",22);g.drawString("EMPTY",242-(g.stringWidth("EMPTY")),15); } 
    else if (this.v<100) {g.setFont("Vector",35);g.drawString(this.v+"%",239-(g.stringWidth(this.v+"%")),8);} 
    else  {g.setFont("Vector",29);g.drawString("FULL",242-(g.stringWidth("FULL")),10); } 
    g.flip();
  }
  //hours
  if (t[0]!=this.hour){
    this.hour=t[0];
    g.setColor(0,colo.bck1);
    g.fillRect(0,55,100,150);
    g.setColor(1,colo.txt);
    g.setFont("Vector",60);
    g.drawString(t[0],10,75); //hours
  g.flip();
  }
  //minutes
  if (t[1]!=this.min ){
    this.min=t[1];
    g.setFont("Vector",60);
	this.fmin=colo.txt1;
    this.fsec=col.black;
	if (global.alrm) {
    if (alrm.buzz!=-1) {this.bmin=col.gray;this.fmin=col.yellow;this.fsec=col.gray;this.bsec=col.yellow;}
    else if (alrm[1].tmr!==-1||alrm[2].tmr!==-1||alrm[3].tmr!==-1) {this.bmin=colo.btnEn;this.bsec=colo.btnEn;}
    else  {this.bmin=col.dgray1;this.fsec=col.lgray;this.bsec=col.dgray1;}
	}else {this.bmin=col.dgray1;this.fsec=col.lgray;this.bsec=col.dgray1;}
	g.setColor(0,this.bmin);
    g.fillRect(105,55,210,150);
	g.setColor(1,this.fmin);
    g.drawString(t[1],123,75);
    g.flip();
  }
  //seconds
  g.setColor(0,this.bsec);
  g.fillRect(211,55,240,150);
  g.setColor(1,this.fsec);//
  g.setFont("Vector",35);
  g.drawString(s[0],218,70); //seconds
  g.drawString(s[1],218,108); //seconds
  g.flip(); 
 
  //loop
    this.tid=setTimeout(function(t){
      t.tid=-1;
      t.show();
    },200,this);
  },
  tid:-1,
  run:false,
  clear : function(){
    var g=w.gfx;
    pal[0]=colo.bck0;
    g.clear();
    this.exit();
    return true;
  },
  exit: function(){
    this.run=false;
    if (this.tid>=0) clearTimeout(this.tid);
    this.tid=-1;
    return true;
  },
  off: function(){
    var g=w.gfx;
    g.off();
    this.clear();
  }
};
//
face[1] = {
  offms:1000,
  init: function(){
  return true;
  },
  show : function(){
    face.go("alarm",0);
    return true;
  },
  clear: function(){
  return true;
  },
};	
//
face[2] = {
  offms:2000,
  init: function(){
    var g=w.gfx;
    this.hour=-1;
    this.min=-1;
    this.sec=-1;
    this.run=true; 
	g.setColor(0,col.black);
    g.fillRect(0,0,239,239);
    g.flip();
  },
  show : function(){
  if (!this.run) return;
  this.v=w.battVoltage(1);
  var g=w.gfx;
  var d=(Date()).toString().split(' ');
  var t=(d[4]).toString().split(':');
  var s=(t[2]).toString().split('');
  //hours
  if (t[0]!=this.hour){
    this.hour=t[0];
    g.setColor(0,colo.bck1);
    g.fillRect(0,55,100,150);
    g.setColor(1,colo.txt);
    g.setFont("Vector",60);
    g.drawString(t[0],10,75); //hours
  g.flip();
  }
  //minutes
  if (t[1]!=this.min ){
    this.min=t[1];
    g.setFont("Vector",60);
	this.fmin=colo.txt1;
    this.fsec=col.black;
	if (global.alrm) {
    if (alrm.buzz!=-1) {this.bmin=col.gray;this.fmin=col.yellow;this.fsec=col.gray;this.bsec=col.yellow;}
    else if (alrm[1].tmr!==-1||alrm[2].tmr!==-1||alrm[3].tmr!==-1) {this.bmin=colo.btnEn;this.bsec=colo.btnEn;}
    else  {this.bmin=col.dgray1;this.fsec=col.lgray;this.bsec=col.dgray1;}
	}else {this.bmin=col.dgray1;this.fsec=col.lgray;this.bsec=col.dgray1;}
	g.setColor(0,this.bmin);
    g.fillRect(105,55,210,150);
	g.setColor(1,this.fmin);
    g.drawString(t[1],123,75);
    g.flip();
  }
  //seconds
  g.setColor(0,this.bsec);
  g.fillRect(211,55,240,150);
  g.setColor(1,this.fsec);//
  g.setFont("Vector",35);
  g.drawString(s[0],218,70); //seconds
  g.drawString(s[1],218,108); //seconds
  g.flip(); 
  //loop
  this.tid=setTimeout(function(t){
      t.tid=-1;
      t.show();
  },1000,this);
  },
  tid:-1,
  run:false,
  clear : function(){
    var g=w.gfx;
    pal[0]=colo.bck0;
    this.exit();
    return true;
  },
  exit: function(){
    this.run=false;
    if (this.tid>=0) clearTimeout(this.tid);
    this.tid=-1;
    return true;
  },
  off: function(){
    var g=w.gfx;
    g.off();
    this.clear();
  }
};	
//touch
touchHandler[0]=function(e,x,y){
    var p=w.pin.MOTOR;
    if (e==5){
	  if (x>105 && (55<y&&y<150)){ 
	     digitalPulse(p,1,[30,50,30]);
         face.go("alarm",0);return;
	//hid music controls
      }else if (x<158 && y<50){ 
		if (typeof hidM!="undefined"){
        digitalPulse(p,1,[30,50,30]);
         face.go("hid",0); return;
		}else digitalPulse(p,1,40);
	  }else digitalPulse(p,1,40);
    }else if  (e==1){
		face.go("main",-1);return;
    }else if  (e==2){
		if (y>160&&x<50) {
        if (w.gfx.bri.lv!==7) {this.bri=w.gfx.bri.lv;w.gfx.bri.set(7);}
        else w.gfx.bri.set(this.bri);
		digitalPulse(p,1,[30,50,30]);
     }else if (y>190) {
		face.go("settings",0);return;
	  } else digitalPulse(p,1,40);
    }else if  (e==3){
		face.go("alarm",0);return;
    }else if  (e==4){
		face.go("push",0);return;
    }else if  (e==12){
	if (150<y&&y<200){ 	
		digitalPulse(p,1,180);
		set.push=undefined;
	}else if (x>162 && y>200){ 
      digitalPulse(p,1,40);
	//alarms
     }else if (x>105 && (55<y&&y<150)){ 
	   if (alrm.buzz!=-1) {
		alrm.stop(alrm.now); digitalPulse(p,1,[80,40,80]);
	   }else {
        digitalPulse(p,1,[30,50,30]);
        face.go("alarm",0);return;
	  }	  
     }else digitalPulse(p,1,40);
    }
   this.timeout();
};

touchHandler[2]=function(e,x,y){
    var p=w.pin.MOTOR;
    digitalPulse(p,1,[30,50,30]);
    face.go("main",0);return;
};

