//push	
face[0] = {
  offms: 3000,
  init: function(){
    var g=w.gfx;
    g.setColor(1,col.black);
    g.fillRect(0,0,239,239); //all
	g.setColor(0,col.dgray);
	g.fillRect(0,0,239,77);
	g.fillRect(0,83,239,157);
	g.fillRect(0,163,239,249);
	g.flip();
    g.setColor(1,col.white);
    g.setFont("Vector",24);
	g.drawString("INFO",120-(g.stringWidth("INFO")/2),20);
   	g.flip();
  	g.drawString("NOTE",120-(g.stringWidth("NOTE")/2),100);
	g.flip();
    g.drawString("TODO",120-(g.stringWidth("TODO")/2),180);
    g.flip();	
  },
  show : function(){
	return;
    var g=w.gfx;
    g.setColor(0,col.black);
    g.fillRect(0,0,239,239); //all
    g.setColor(1,colo.txt1);
    g.flip();
    g.setFont("Vector",24);
	g.setColor(0,col.dgray);
	g.fillRect(0,0,239,77);
	g.setColor(1,col.white);
	g.drawString("INFO",120-(g.stringWidth("INFO")/2),20);
    g.flip();	
	g.setColor(0,col.dgray);
	g.fillRect(0,83,239,157);
	g.setColor(1,col.white);
	g.drawString("NOTE",120-(g.stringWidth("NOTE")/2),100);
	g.flip();
    g.setColor(0,col.dgray);
	g.fillRect(0,163,239,249);
	g.setColor(1,col.white);
	g.drawString("TODO",120-(g.stringWidth("TODO")/2),180);
	g.flip();
  },
  clear : function(o){
    var g=w.gfx;
    pal[0]=colo.bck0;
    g.clear();
    this.exit(o);
    return true;
  },
  exit: function(o){
    return true;
  },
  off: function(o){
    var g=w.gfx;
    g.off();
    this.clear(o);
  }
};

//
face[1] = {
  offms:1000,
  init: function(){
  return true;
  },
  show : function(){
    face.go("main",0);
    return true;
  },
  clear: function(){
  return true;
  },
};	
//info face
face[5] = {
  gr2en:function(text) {
	if (set.gr==1){
    text = text
    .replace(/\xCE\xB1/g, 'a')
    .replace(/\xCE\x91/g, 'A')
    .replace(/\xCE\xB2/g, 'b')
    .replace(/\xCE\x92/g, 'B')
    .replace(/\xCE\xB3/g, 'g')
    .replace(/\xCE\x93/g, 'G')
    .replace(/\xCE\xB4/g, 'd')
    .replace(/\xCE\x94/g, 'D')
    .replace(/\xCE\xB5/g, 'e')
    .replace(/\xCE\x95/g, 'E')
    .replace(/\xCE\xB6/g, 'z')
    .replace(/\xCE\x96/g, 'Z')
    .replace(/\xCE\xB7/g, 'h')
    .replace(/\xCE\x97/g, 'H')
    .replace(/\xCE\xB8/g, '8')
    .replace(/\xCE\x98/g, '8')
    .replace(/\xCE\xB9/g, 'i')
    .replace(/\xCE\x99/g, 'I')
    .replace(/\xCE\xBA/g, 'k')
    .replace(/\xCE\x9A/g, 'K')
    .replace(/\xCE\xBB/g, 'l')
    .replace(/\xCE\x9B/g, 'L')
    .replace(/\xCE\xBC/g, 'm')
    .replace(/\xCE\x9C/g, 'M')
    .replace(/\xCE\xBD/g, 'n')
    .replace(/\xCE\x9D/g, 'N')
    .replace(/\xCE\xBE/g, 'ks')
    .replace(/\xCE\x9E/g, 'KS')
    .replace(/\xCE\xBF/g, 'o')
    .replace(/\xCE\x9F/g, 'O')
    .replace(/\xCF\x80/g, 'p')
    .replace(/\xCE\xA0/g, 'P')
    .replace(/\xCF\x81/g, 'r')
    .replace(/\xCE\xA1/g, 'R')
    .replace(/\xCF\x83/g, 's')
    .replace(/\xCE\xA3/g, 'S')
    .replace(/\xCF\x82/g, 's')
    .replace(/\xCF\x84/g, 't')
    .replace(/\xCE\xA4/g, 'T')
    .replace(/\xCF\x85/g, 'u')
    .replace(/\xCE\xA4/g, 'Y')
    .replace(/\xCF\x86/g, 'f')
    .replace(/\xCE\xA6/g, 'F')
    .replace(/\xCF\x87/g, 'x')
    .replace(/\xCE\xA7/g, 'X')
    .replace(/\xCF\x88/g, 'ps')
    .replace(/\xCE\xA8/g, 'PS')
    .replace(/\xCF\x89/g, 'w')
    .replace(/\xCE\xA9/g, 'W')  
    .replace(/\xCE\xAC/g, 'a')
    .replace(/\xCE\xAD/g, 'e')
    .replace(/\xCF\x8C/g, 'o')
    .replace(/\xCE\xAF/g, 'i')
    .replace(/\xCE\xAE/g, 'h')
    .replace(/\xCF\x8D/g, 'u')
    .replace(/\xCF\x8A/g, 'i')
    .replace(/\xCF\xAB/g, 'u')
    .replace(/\xCE\x90/g, 'i')
    .replace(/\xCE\xB0/g, 'u'); 	
    return text;
	}
  },
  offms: 3000,
  init: function(type){
    this.reshape=(str,N) => str.split('').reduce((o,c,i) => o+(!i || i%N?'':'\n')+c, '');
    var g=w.gfx;
    if (type==="info") {
      this.list=require("Storage").list("info");
    }else if (type==="note") {  
      this.list=require("Storage").list("note");
    }else if (type==="todo") {
      this.list=require("Storage").list("todo");
    }
    this.type=type;
    this.go=this.list.length-1;
    this.at=this.go;
    this.del=0;
    g.setColor(1,col.raf3);
    g.fillRect(0,0,239,30);
    g.setColor(0,col.dgray);
    g.fillRect(0,35,239,239);
    g.flip(); 
    g.setColor(1,colo.txt1);
    g.setFont("Vector",24);
    if (this.list.length==0){
      g.drawString("NO ENTRIES",120-(g.stringWidth("NO ENTRIES")/2),100); 
    } else {
      var lo=require("Storage").read(this.type+this.list[this.list.length-1].substr(4)).split("\n");
      g.setColor(1,col.raf3);
      g.setColor(0,col.white);
      g.drawString(lo[0],3,5);
      g.drawString(this.go+1+"/"+this.list.length,239-(g.stringWidth(this.go+1+"/"+this.list.length)),5);
	  g.flip();
      g.setFont("Vector",21);
      g.setColor(0,col.dgray);
      g.setColor(1,col.lblue);
	  //g.drawString(lo[2].toUpperCase(),120-(g.stringWidth(lo[2].toUpperCase())/2),80);
  	  if (set.gr==1) g.drawString(this.reshape(this.gr2en(lo[2]).toUpperCase(),17),3,50);
	  else g.drawString(this.reshape(lo[2].toUpperCase(),17),3,50);
      g.flip();
      g.setFont("Vector",24);
      g.setColor(0,col.dgray);
      g.setColor(1,col.lgray);
   	  g.drawString(lo[1],120-(g.stringWidth(lo[1])/2),218);
      this.run=true;
      lo=undefined;
    }
    g.flip();
  },
  show : function(){
    if (!this.run||this.list.length==0) return;
    var g=w.gfx;
    if (this.del===1) {
      this.del=2;
      g.setColor(1,col.dgray);
      g.fillRect(0,0,239,60);
      g.setColor(0,col.lgray);
      g.setFont("Vector",20);
      g.drawString("SWIPE LEFT TO",120-(g.stringWidth("SWIPE LEFT TO")/2),15);
      g.flip();
      g.setColor(1,col.red);
      g.fillRect(0,60,239,115);
      g.setColor(0,col.white);
      g.setFont("Vector",30);
      g.drawString("DELETE",120-(g.stringWidth("DELETE")/2),75);
      g.flip();
      g.setColor(1,col.dgray);
      g.fillRect(0,120,239,180);
      g.setColor(0,col.lgray);
      g.setFont("Vector",20);
      g.drawString("OR TAP TO",120-(g.stringWidth("OR TAP TO")/2),140);
      g.flip();
      g.setColor(1,col.gray);
      g.fillRect(0,180,239,239);
      g.setColor(0,col.white);
      g.setFont("Vector",30);
      g.drawString("CANCEL",120-(g.stringWidth("CANCEL")/2),200);
      g.flip();
    }else if (this.go!=this.at){
      if (this.go>this.list.length-1) this.go=0;
      if (this.go<0) this.go=this.list.length-1;
      this.at=this.go;
      var lo=require("Storage").read(this.type+this.list[this.go].substr(4)).split("\n");
      g.setFont("Vector",24);
      g.setColor(1,col.raf3);
      g.fillRect(0,0,239,30);
      g.setColor(0,col.white);
      //g.drawString(lo[0].toUpperCase(),3,5);
      g.drawString(lo[0],3,5);
      g.drawString(this.go+1+"/"+this.list.length,239-(g.stringWidth(this.go+1+"/"+this.list.length)),5);
	  g.flip();
      g.setFont("Vector",21);
      g.setColor(0,col.dgray);
      g.fillRect(0,30,239,210);
      g.setColor(1,col.lblue);
	  //g.drawString(lo[2].toUpperCase(),120-(g.stringWidth(lo[2].toUpperCase())/2),80);
  	  if (set.gr==1) g.drawString(this.reshape(this.gr2en(lo[2]).toUpperCase(),17),3,50);
	  else g.drawString(this.reshape(lo[2].toUpperCase(),17),3,50);
      g.flip();
      g.setFont("Vector",24);
      g.setColor(0,col.dgray);
      g.fillRect(0,210,239,239);
      g.setColor(1,col.lgray);
   	  g.drawString(lo[1],120-(g.stringWidth(lo[1])/2),218);
      g.flip();
      lo=undefined;
    }
     //loop
    this.tid=setTimeout(function(t,o){
      t.tid=-1;
      t.show(o);
    },100,this);
  },
  tid:-1,
  run:false,
  clear : function(o){
    var g=w.gfx;
    pal[0]=colo.bck0;
    g.clear();
    this.exit(o);
    return true;
  },
  exit: function(o){
    this.run=false;
    if (this.tid>=0) clearTimeout(this.tid);
    this.tid=-1;
    return true;  },
  off: function(o){
    var g=w.gfx;
    g.off();
    this.clear(o);
  }
};

//touch-push  
touchHandler[0]=function(e,x,y){
    var p=w.pin.MOTOR;
    if (e==5){
      if (y<80){
        face.go("push",5,"info");return;
      } else if (80<=y&&y<160){
        face.go("push",5,"note");return;
      } else if (160<=y&&y<239){
        face.go("push",5,"todo");return;
      }else digitalPulse(p,1,40);
    }else if  (e==1){
		face.go("push",-1);return;
    }else if  (e==2){
	  if (y>160&&x<50) {
        if (w.gfx.bri.lv!==7) {this.bri=w.gfx.bri.lv;w.gfx.bri.set(7);}
        else w.gfx.bri.set(this.bri);
		digitalPulse(p,1,[30,50,30]);
      }else if (y>190) {
		face.go("settings",0);return;
	  } else digitalPulse(p,1,40);
    }else if  (e==3){
		face.go("main",0);return;
    }else if  (e==4){
		face.go("main",0);return;
    }else if  (e==12){
	 if (x<120 && y>190) reset();
	 else if (x>120 && y>190) reset();
     else digitalPulse(p,1,40);
    }
   this.timeout();
};

touchHandler[5]=function(e,x,y){
    var p=w.pin.MOTOR;
    if (face[5].del===2){
      if  (e==3) {
        require("Storage").erase(face[5].type+(face[5].list[face[5].go].substr(4)));
        face[5].list=require("Storage").list(face[5].type);
        if (face[5].list.length==0){digitalPulse(p,1,80);face.go("push",0);return;} 
        face[5].go--;
      } else face[5].at=-1;
      face[5].del=0;
      return;
    }else if (e==5){
	  digitalPulse(p,1,40);
    }else if  (e==1){
      face[5].go++;
      digitalPulse(p,1,30,50,30);
    }else if  (e==2){
	  face[5].go--;
      digitalPulse(p,1,30,50,30);
    }else if  (e==3){
      if  (face[5].list.length>0) face[5].del=1;
      else {face.go("push",0); return;}
    }else if  (e==4){
	  face.go("push",0);return;
    }else if  (e==12){
	//euc on/off
	 if (x<120 && y>190) reset();
	 else if (x>120 && y>190) reset();
     else digitalPulse(p,1,40);
    }
   this.timeout();
};
