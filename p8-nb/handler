//set p8 type
const touchtype="816"; //716|816|816s
const acctype="BMA421"; //BMA421|SC7A20
//face
var face={
  appCurr:"",
  appPrev:"",
  pageCurr:-1,
  pagePrev:-1,	
  pageArg:"",
  offid:-1,
  offms:-1,
  off:function(page){ 
      if (this.offid>=0) {clearTimeout(this.offid); this.offid=-1;}
      if (face[this.pageCurr]!=-1) this.offms=face[this.pageCurr].offms;
      this.offid=setTimeout((c)=>{
        this.offid=-1;
		if (set.acc&&acc.tid==-1) acc.on();
		if (c===0||c===2) {
			if (this.appCurr==="main") {
				if (face[c].off) {
					if (touchtype!="816") i2c.writeTo(0x15,0xa5,3); 
					if (touchtype=="716") tfk.exit();	
					face[c].off();this.pageCurr=-1;face.pagePrev=c;
				}
			}else face.go(this.appCurr,1);
		}else if (c>1) face.go(this.appCurr,0);
	  },this.offms,this.pageCurr);
  },
  go:function(app,page,arg){
    this.appPrev=this.appCurr;
	this.pagePrev=this.pageCurr;
    this.appCurr=app;
    this.pageCurr=page;
	if (this.pagePrev==-1&&w.gfx.isOn) {w.gfx.clear();w.gfx.off();}
    if (this.pagePrev!=-1) face[this.pagePrev].clear();
  	if (this.pageCurr==-1 && this.pagePrev!=-1) {
		if (touchtype=="716")tfk.loop=100;
		face[this.pagePrev].off();
		if (set.acc&&acc.tid==-1) acc.on();
		if (this.offid>=0) {clearTimeout(this.offid); this.offid=-1;}
		return;
	}
	if (app!=this.appPrev) {
      face[1]=0;face[2]=0;face[5]=0;
      eval(require('Storage').read(app));
    }
	this.off(page);
	face[page].init(arg);	
	if(!w.gfx.isOn) {w.gfx.on();
		if (touchtype!="816") digitalPulse(w.pin.TP_RESET,1,[10,50]);
		if (touchtype=="716"){tfk.loop=5;if( tfk.tid==-1) tfk.init();}
	}
	face[page].show(arg);
	if(arg) this.pageArg=arg;
  }
};
//settings - run set.upd() after changing settings to take effect.
var set={
  name:"p8enaon", //Set the name to be broadcasted by the Bluetooth module. 
  cli:1, //Nordic serial bluetooth access. Enables/disables Espruino Web IDE.
  hid:0, //enable/disable Bluetooth music controll Service.
  atc:1, //Notifications service. Enables/disables support for "d6 notification" playstore app from ATC1441.
  acc:1, //enables/disables wake-screen on wrist-turn. 
  bt:0, //Incommint BT service status indicator- Not user settable. 0=not_connected|1=atc|2=cli
  tor:0, //Enables/disables totch- Not user settable.
  boot:getTime(), 
  accR:function(){if (this.acc)acc.on(); else acc.off();},
  hidM:undefined, //not user settable.
  upd:function(){ //run this for settings changes to take effect.
	if (this.atc==0 && this.cli==0 && this.hid==0) {
        NRF.setAdvertising({},{connectable:false});
        NRF.disconnect();
//        NRF.setServices(undefined,{uart:false});
      	this.atcR=undefined;this.atcW=undefined;this.hidM=undefined;
	} else {
		if (set.hid==1 && this.hidM==undefined) this.hidM=require("ble_hid_controls");//enable hid
		if (set.atc==1){
          if (set.bt!=0) NRF.disconnect();
          eval(require('Storage').read('atc'));}
		else {
			NRF.setServices({},{uart:Boolean(set.cli),hid:(set.hid)?this.hidM.report:undefined});
		    this.atcR=undefined;this.atcW=undefined;
		}
   		if (set.hid==0) this.hidM=undefined;
        NRF.setAdvertising({}, { name:this.name,connectable:true });
	}
  }
};
set.upd();
//ble state
NRF.on('disconnect',function() {NRF.disconnect();set.bt=0;});  
NRF.on('connect',function(addr) {set.bt=2;});
//NRF.on('connect',function(addr) {if (set.bt==1) NRF.disconnect(); set.bt=2;});
//charging notify
setWatch(function(s){
  var co;
  var g=w.gfx;
  if (s.state==1) {
	digitalPulse(w.pin.MOTOR,1,200); 
	co=col.raf;
  }else {
	digitalPulse(w.pin.MOTOR,1,[100,80,100]);
  	co=col.black;
  }
  if (face.pageCurr<0){
	if (face.offid==-1){ g.clear();g.flip();}
	g.setColor(0,col.lgray);g.fillRect(63,0,178,239);
	g.setColor(1,col.black);g.drawRect(100,58,140,89);
	g.drawRect(101,59,139,89);g.drawRect(102,60,138,88);
	g.drawRect(90,88,150,147);g.drawRect(91,89,149,146);
	g.drawRect(92,90,148,145);g.drawRect(104,145,137,166);
	g.drawRect(105,146,136,165);g.drawRect(106,147,135,164);
	g.drawRect(115,166,126,229);g.drawRect(116,166,125,228);
	g.drawRect(117,166,124,227);g.flip();
	g.setColor(1,co);g.fillRect(93,91,147,144);
   	g.setColor(0,col.black);g.flip();
	if (face.offid!==-1) clearTimeout(face.offid);
	  face.offid=setTimeout(()=>{
        g.clear();g.off();face.offid=-1;
      },2000);
	}  
    if(!g.isOn) g.on();
},w.pin.CHARGING,{repeat:true, debounce:500,edge:0});  
//button 
var button;
var press=true;
var l1=-1;
function buttonHandler(s){
  if (button!=-1) {clearWatch(button);button=-1;}
  var p=w.pin.MOTOR;
  // button down
  if (s.state==true) { 
    if ( l1 >=0) {clearTimeout(l1); l1=-1;}
    press=true;
	//toggle EUC on long press
    l1=setTimeout(() => {
      if (typeof euc !== 'undefined' ) {
		euc.tgl();face.go("euc",0);press=false;}
    }, 1000);
    button=setWatch(buttonHandler,BTN1, {repeat:false,debounce:10,edge:0});
    return;
  }else if (press==true && s.state==false)  { 
    if (l1 >=0) {clearTimeout(l1); l1=-1;}
	press=false;
	if (face.pageCurr==-1) 
		if (typeof euc !== 'undefined'){
			if (euc.conn!="OFF") face.go("euc",0);else face.go(face.appCurr,0);
		}else face.go(face.appCurr,0);
	else { 
      var to=face.pageCurr+1;
      if (to>=2) to=0;
      face.go(face.appCurr,to);
    }
  } else {
    if ( l1 >=0) {clearTimeout(l1); l1=-1;}
  }	
  button=setWatch(buttonHandler,BTN1, {repeat:false,debounce:10,edge:0});
}
button=setWatch(buttonHandler,BTN1, {repeat:false, debounce:10,edge:0});
//touch 
var touchHandler = {
  timeout: function(){
	face.off(this.fto);
  }
};
//touch controller
//var i2c=I2C1;
var i2c=new I2C();
i2c.setup({scl:w.pin.TP_SCL, sda:w.pin.TP_SDA, bitrate:100000});
digitalPulse(w.pin.TP_RESET,1,[5,50]);
var c;
if (touchtype=="816"){
setWatch(function(s){
  var tp=i2c.readFrom(0x15,7);
  if (face.pageCurr>=0) touchHandler[face.pageCurr](tp[1],tp[4],tp[6]);
  else if (tp[1]==5) {
    if (s.time-c<0.25) face.go(face.appCurr,0);
    c=s.time;
  }else if (/*tp[1]==1||*/tp[1]==1) face.go(face.appCurr,0);
},w.pin.TP_INT,{repeat:true, edge:"rising"}); 
}else if (touchtype=="816s"){
var lt,xt,yt,tt,tf;
//var ct=0;
setWatch(function(s){
var tp=i2c.readFrom(0x15,7);
//console.log(tp);
if (face.pageCurr>=0) {
  if (tp[3]==0) {
	if (tt) {clearTimeout(tt);tt=0;}
    xt=tp[4];yt=tp[6];lt=1;st=1;tf=1;
	return;
  }else if (tp[1]==0 && tf) {
    var a;
    //ct++;
    //if (ct>2){
    a=5;
	if (tp[6]>=yt+20) a=1;
	else if (tp[6]<=yt-20) a=2;
	else if (tp[4]<=xt-20) a=3;
	else if (tp[4]>=xt+20) a=4;
//    console.log(tp[4],xt,tp[6],yt,a,ct);
   	if (tt) {clearTimeout(tt);tt=0;}
    if (a!=5){
      touchHandler[face.pageCurr](a,xt,yt);
      ct=0;
      tf=0;
	  return;
    } else {  
	tt=setTimeout(()=>{
       touchHandler[face.pageCurr](a,xt,yt);
		tt=0;ct=0;
        tf=0;
    },20);  
    }
    return;
  }else if (tp[1]==5) {
  if (tt) {clearTimeout(tt);tt=0;}
    touchHandler[face.pageCurr](5,tp[4],tp[6]);
    tf=0;
	return;
  }else if (tp[1]==12) {
 	if (tt) {clearTimeout(tt);tt=0;}
    if (lt) touchHandler[face.pageCurr](12,tp[4],tp[6]);
    lt=0;
    tf=0;
	return;
  }
}else {
  if(tp[3]==0) tf=1;
  if (tp[1]==5 && tf) {
    if (s.time-c<0.25) face.go(face.appCurr,0);
    c=s.time;tf=0;
  }else if (tp[1]==1 && tf) {face.go(face.appCurr,0);tf=0;}
}
},w.pin.TP_INT,{repeat:true, edge:"falling"}); 
}else if (touchtype=="716"){
var tfk={
tid:-1,
x:0,
y:0,
do:0,
st:1,
loop:5,
init:function(){
	var tp=i2c.readFrom(0x15,7);
	//print(tp);
	if (tp[3]==128) {
        if (this.st) {
          if (face.pageCurr==-1){this.loop=5;face.go(face.appCurr,0);return;}
          this.st=0;
          this.do=1;
          this.x=tp[4];this.y=tp[6];
        }
        if (tp[1]==0 && this.do==1) {
            var a=0;
            if (tp[6]>=this.y+20) a=1;
	        else if (tp[6]<=this.y-20) a=2;
	        else if (tp[4]<=this.x-20) a=3;
	        else if (tp[4]>=this.x+20) a=4;
            if (a!=0) {
              this.do=0;
              touchHandler[face.pageCurr](a,this.x,this.y);
            }
        }else {
            if (tp[1]==5||tp[1]==12){touchHandler[face.pageCurr](tp[1],this.x,this.y);this.do=0;}
        }
	}else if (tp[3]==255) {
		if (this.do===1){touchHandler[face.pageCurr](5,this.x,this.y);this.do=0;}
		this.st=1;
	}
	this.tid=setTimeout(function(t){
		t.tid=-1;
		t.init();
	},this.loop,this);
},
exit:function(){
    if (this.tid>=0) clearTimeout(this.tid);
    this.tid=-1;
    return true;
}
};	
}
//accelerometer(wake on look)
if (acctype==="BMA421"){
	i2c.writeTo(0x18,0x40,0x17);
	i2c.writeTo(0x18,0x7c,0x03);
}
var acc={
  loop:200,
  tid:-1,
  run:-1,
  up:0,
  on:function(){
	if (acctype==="BMA421"){i2c.writeTo(0x18,0x7d,0x04);i2c.writeTo(0x18,0x12);
	}else i2c.writeTo(0x18,0x01);
	this.run=1;this.loop=200;this.init();},
  off:function(){if (acctype==="BMA421")i2c.writeTo(0x18,0x7d,0x04);this.run=-1;},
  init:function(){
	if(this.run===-1) return;
    var data;
	if (acctype=="BMA421") data=i2c.readFrom(0x18,6);
    else {
      data={}; data[3]=i2c.readFrom(0x18,1)+"";
    } 
	//console.log(data);
	if (230<data[3]&&data[3]<250) {
		if (acctype!="BMA421"){
		    i2c.writeTo(0x18,3);
			data[1]=i2c.readFrom(0x18,1)+"";
		    i2c.writeTo(0x18,1);
		}
		if (data[1]<15||data[1]>=250) {
		  if (!w.gfx.isOn&&this.up==0&&face.appCurr!=""){ 
            this.up=1; 
            if (typeof euc !== 'undefined'&&euc.conn!="OFF") face.go("euc",0);
            else{ 
				this.loop=1500;
				if (face.appCurr=="main") face.go("main",2);
				else face.go(face.appCurr,0);
			}
		  }else if (w.gfx.isOn&&face.pageCurr!=-1) {

			if (face.appCurr=="main" && face.pageCurr==2) face.go("main",0);
			else if (set.tor!=1) face.off();
//			this.loop=500;
		  }
		}
    }else {this.loop=300;this.up=0;}
    this.tid=setTimeout(function(t){
		t.tid=-1;
		t.init(); 
    },this.loop,this);
  }
};
set.accR();
//themes -todo
col={
	black:0,
	white:4095,
	lblue:1535,
	blue:143,
	dblue:1375,
	blue1:1708,
	raf:1453,
	raf1:1708,
	raf2:1963,
	raf3:2220,
	raf4:2474,
	raf5:3005,
	olive:170,
	gray:2730,
	lgray:3003,
	dgray:1365,
	lgreen:1525,
	red:3840,
	dred:3925,
	purple:3935,
	yellow:4085
};
var colo={ txt: 4095, txt1: 1535, txt2: 1365, txt3: 0,
  hdr: 1368, hTxt: 3003, bck: 1708, bck0: 0, bck1: 3003,
  bck2: 2730, bck3: 1963, btnEn: 1453, btnEn1: 1535, btnEn2: 3935,
  btnDs: 2730, btnDs1: 3003, btnDs2: 1963, btnAl: 4085, btnAl1: 3840,
  btnSt: 3935, btnTxt: 0, btnTxt1: 4095 };
/*
var colo={
	txt:col.white,
	txt1:col.lblue,
	txt2:col.dgray,
	txt3:col.black,
	hdr:col.dgray+3,
	hTxt:col.lgray,
	bck:col.raf1,
	bck0:col.black,
	bck1:col.lgray,
	bck2:col.gray,
	bck3:col.raf2,
	btnEn:col.raf,
	btnEn1:col.lblue,
	btnEn2:col.purple,
	btnDs:col.gray,
	btnDs1:col.lgray,
	btnDs2:col.raf2,
	btnAl:col.yellow,
	btnAl1:col.red,
	btnSt:col.purple,
	btnTxt:col.black,
   	btnTxt1:col.white
};
*/
